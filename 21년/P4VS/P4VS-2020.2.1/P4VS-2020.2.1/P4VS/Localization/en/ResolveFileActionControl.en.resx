<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="label1.Text" xml:space="preserve">
    <value>Recomended action:</value>
  <comment>original:|Recomended action:|:</comment></data>
	<data name="RecomendationLbl.Text" xml:space="preserve">
    <value>RecomendationLbl</value>
  <comment>original:|RecomendationLbl|:</comment></data>
	<data name="ReasonLbl.Text" xml:space="preserve">
    <value>ReasonLbl</value>
  <comment>original:|ReasonLbl|:</comment></data>
	<data name="label6.Text" xml:space="preserve">
    <value>Auto resolve options:</value>
  <comment>original:|Auto resolve options:|:</comment></data>
	<data name="AcceptSourceBtn.Text" xml:space="preserve">
    <value>Accept Source</value>
  <comment>original:|Accept Source|:</comment></data>
	<data name="AcceptTargetBtn.Text" xml:space="preserve">
    <value>Accept Target</value>
  <comment>original:|Accept Target|:</comment></data>
	<data name="AcceptMergedBtn.Text" xml:space="preserve">
    <value>Accept Merged</value>
  <comment>original:|Accept Merged|:</comment></data>
	<data name="RunMergeToolBtn.Text" xml:space="preserve">
    <value>Run Merge Tool</value>
  <comment>original:|Run Merge Tool|:</comment></data>
	<data name="AcceptSourceLbl.Text" xml:space="preserve">
    <value>Replace target file with a copy of the source file</value>
  <comment>original:|Replace target file with a copy of the source file|:</comment></data>
	<data name="AcceptTargetLbl.Text" xml:space="preserve">
    <value>Leave target file unchanged</value>
  <comment>original:|Leave target file unchanged|:</comment></data>
	<data name="AcceptMergedLbl.Text" xml:space="preserve">
    <value>Replace target file with the merged result of source and target</value>
  <comment>original:|Replace target file with the merged result of source and target|:</comment></data>
	<data name="RunMergeLbl.Text" xml:space="preserve">
    <value>Manually merge source and target before accepting</value>
  <comment>original:|Manually merge source and target before accepting|:</comment></data>
	<data name="AAOpenSourceMI.Text" xml:space="preserve">
    <value>Source</value>
  <comment>original:|Source|:</comment></data>
	<data name="AAOpenTargetMI.Text" xml:space="preserve">
    <value>Target</value>
  <comment>original:|Target|:</comment></data>
	<data name="AAOpenMergedMI.Text" xml:space="preserve">
    <value>Mergered</value>
  <comment>original:|Mergered|:</comment></data>
	<data name="AAOpenMI.Text" xml:space="preserve">
    <value>Open File</value>
  <comment>original:|Open File|:</comment></data>
	<data name="AADiffSourceVsTargetMI.Text" xml:space="preserve">
    <value>Source Vs Target</value>
  <comment>original:|Source Vs Target|:</comment></data>
	<data name="AADiffBaseVsSourceMI.Text" xml:space="preserve">
    <value>Base Vs Source</value>
  <comment>original:|Base Vs Source|:</comment></data>
	<data name="AADiffBaseVsTargetMI.Text" xml:space="preserve">
    <value>Base Vs Target</value>
  <comment>original:|Base Vs Target|:</comment></data>
	<data name="AADiffBaseVsMergedMI.Text" xml:space="preserve">
    <value>Base Vs Merged Result</value>
  <comment>original:|Base Vs Merged Result|:</comment></data>
	<data name="AADiffSourceVsMergedMI.Text" xml:space="preserve">
    <value>Source Vs Merged Results</value>
  <comment>original:|Source Vs Merged Results|:</comment></data>
	<data name="AADiffTargetVsMergedMI.Text" xml:space="preserve">
    <value>Target Vs Merged Result</value>
  <comment>original:|Target Vs Merged Result|:</comment></data>
	<data name="AADiffMI.Text" xml:space="preserve">
    <value>Diff</value>
  <comment>original:|Diff|:</comment></data>
	<data name="AAHistorySourceMI.Text" xml:space="preserve">
    <value>Source</value>
  <comment>original:|Source|:</comment></data>
	<data name="AAHistoryTargetMI.Text" xml:space="preserve">
    <value>Target</value>
  <comment>original:|Target|:</comment></data>
	<data name="AAHistoryMI.Text" xml:space="preserve">
    <value>File History</value>
  <comment>original:|File History|:</comment></data>
	<data name="AATimeLapseSourceMI.Text" xml:space="preserve">
    <value>Source</value>
  <comment>original:|Source|:</comment></data>
	<data name="AATimeLapseTargetMI.Text" xml:space="preserve">
    <value>Target</value>
  <comment>original:|Target|:</comment></data>
	<data name="AATimeLapseMI.Text" xml:space="preserve">
    <value>Time-lapse View</value>
  <comment>original:|Time-lapse View|:</comment></data>
	<data name="AARevisionGraphSourceMI.Text" xml:space="preserve">
    <value>Source</value>
  <comment>original:|Source|:</comment></data>
	<data name="AARevisionGraphTargetMI.Text" xml:space="preserve">
    <value>Target</value>
  <comment>original:|Target|:</comment></data>
	<data name="AARevisionGraphMI.Text" xml:space="preserve">
    <value>Revision Graph</value>
  <comment>original:|Revision Graph|:</comment></data>
	<data name="AdditionalActionsBtn.Text" xml:space="preserve">
    <value>Additional Actions</value>
  <comment>original:|Additional Actions|:</comment></data>
</root>