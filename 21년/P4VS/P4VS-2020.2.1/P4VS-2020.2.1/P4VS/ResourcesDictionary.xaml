<ResourceDictionary x:Class="Perforce.P4VS.ResourcesDictionary"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework" 
                    xmlns:vsshell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.12.0"
                    xmlns:local="clr-namespace:Perforce.P4VS"
                    xmlns:vsui="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.12.0"
                    >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Scrollbar.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Style TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DesignerBackgroundBrushKey}}"/>
    </Style>
    
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"/>
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DesignerBackgroundBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"/>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsui:EnvironmentColors.StartPageButtonBorderBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.FileTabButtonHoverSelectedInactiveBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.CommandBarHoverBrushKey}}"/>
            </Trigger>
            </Style.Triggers> 
    </Style>

    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="LayoutRoot" Background="Transparent" Width="44" Height="30">
                        <TextBlock x:Name="txt" Text="{TemplateBinding Content}" FontFamily="Segoe MDL2 Assets" FontSize="10" 
                                   Foreground="#999999" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.ClearTypeHint="Auto" TextOptions.TextRenderingMode="Aliased"  TextOptions.TextFormattingMode="Display"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="LayoutRoot" Property="Background" Value="#E5E5E5"/>
                            <Setter TargetName="txt" Property="Foreground" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE921;"/>
    </Style>

    <Style x:Key="MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE922;"/>
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Content" Value="&#xE8BB; "/>
    </Style>

    <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30"
                                    CornerRadius="0"
                                    GlassFrameThickness="0"
                                    NonClientFrameEdges="None"
                                    ResizeBorderThickness="5"
                                    UseAeroCaptionButtons="False"    />
            </Setter.Value>
        </Setter>

        <Setter Property="Background" Value="{DynamicResource {x:Static vsui:EnvironmentColors.DesignerBackgroundBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{DynamicResource {x:Static vsui:EnvironmentColors.BrandedUITextBrushKey}}"
                            BorderThickness="1">
                        <Grid>
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="5,30,5,5">
                        <AdornerDecorator>
                            <ContentPresenter />
                        </AdornerDecorator>
                    </Border>
                        <DockPanel Height="30"
                                   VerticalAlignment="Top"
                                   LastChildFill="False">
                            <Button x:Name="btnClose"
                                    Style="{DynamicResource CloseButtonStyle}"
                                    Click="closeBtn_Click"
                                    ToolTip="Close"
                                    DockPanel.Dock="Right"
                                    WindowChrome.IsHitTestVisibleInChrome="True" />

                            <Button x:Name="btnMaximize"
                                    Style="{DynamicResource MaximizeButtonStyle}"
                                    Click="maximizeBtn_Click"
                                    ToolTip="Maximize"
                                    DockPanel.Dock="Right"
                                    WindowChrome.IsHitTestVisibleInChrome="True" />

                            <Button x:Name="btnMinimize"
                                    Style="{DynamicResource MinimizeButtonStyle}"
                                    Click="minimizeBtn_Click"
                                    ToolTip="Minimize"
                                    DockPanel.Dock="Right"
                                    WindowChrome.IsHitTestVisibleInChrome="True" />
                        
                        <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                           VerticalAlignment="Top" HorizontalAlignment="Left"
                           Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}" 
                           Width="{Binding Source={x:Static shell:WindowChrome.GlassFrameCompleteThickness}, Path=SmallIconSize.Width}"
                           shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}" 
                               VerticalAlignment="Top" HorizontalAlignment="Left" 
                               Margin="0,8,0,0"/>
                        </DockPanel>
                    </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
</ResourceDictionary>
